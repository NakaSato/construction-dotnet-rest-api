name: Infrastructure - Deploy Azure Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  AZURE_RESOURCE_GROUP: rg-solar-projects-${{ github.event.inputs.environment }}
  AZURE_LOCATION: eastus

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      run: |
        az group create \
          --name ${{ env.AZURE_RESOURCE_GROUP }} \
          --location ${{ env.AZURE_LOCATION }}

    - name: Deploy Azure Container Registry
      run: |
        az acr create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name solarprojacr${{ github.event.inputs.environment }} \
          --sku Basic \
          --admin-enabled true

    - name: Deploy ARM Template
      run: |
        az deployment group create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --template-file azure/arm-template.json \
          --parameters \
            environmentName=${{ github.event.inputs.environment }} \
            location=${{ env.AZURE_LOCATION }} \
            dbAdminPassword=${{ secrets.DB_ADMIN_PASSWORD }}

    - name: Output Resource Information
      run: |
        echo "‚úÖ Infrastructure deployed successfully!"
        echo "üîó App Service URL: https://solar-projects-api-${{ github.event.inputs.environment }}.azurewebsites.net"
        echo "üóÑÔ∏è  Database Server: solar-projects-db-${{ github.event.inputs.environment }}.postgres.database.azure.com"
        echo "üìä Application Insights: solar-projects-insights-${{ github.event.inputs.environment }}"
