name: Performance Test

on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'Target URL to test'
        required: true
        default: 'https://solar-projects-api-staging.azurewebsites.net'
      duration:
        description: 'Test duration (seconds)'
        required: true
        default: '60'
        type: number

jobs:
  performance-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6

    - name: Create k6 test script
      run: |
        cat > performance-test.js << 'EOF'
        import http from 'k6/http';
        import { check, sleep } from 'k6';

        export let options = {
          stages: [
            { duration: '10s', target: 10 },
            { duration: '${{ github.event.inputs.duration }}s', target: 50 },
            { duration: '10s', target: 0 }
          ],
          thresholds: {
            http_req_duration: ['p(95)<500'],
            http_req_failed: ['rate<0.1']
          }
        };

        const BASE_URL = '${{ github.event.inputs.target_url }}';

        export default function() {
          // Health check
          let healthResponse = http.get(`${BASE_URL}/health`);
          check(healthResponse, {
            'health check status is 200': (r) => r.status === 200
          });

          // Todo API test
          let todoResponse = http.get(`${BASE_URL}/api/todo`);
          check(todoResponse, {
            'todo API status is 200': (r) => r.status === 200
          });

          sleep(1);
        }
        EOF

    - name: Run performance test
      run: |
        k6 run performance-test.js --out json=results.json

    - name: Generate performance report
      run: |
        echo "## Performance Test Results 📊" >> $GITHUB_STEP_SUMMARY
        echo "**Target URL:** ${{ github.event.inputs.target_url }}" >> $GITHUB_STEP_SUMMARY
        echo "**Duration:** ${{ github.event.inputs.duration }} seconds" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Parse results (simplified)
        if [ -f results.json ]; then
          echo "✅ Performance test completed" >> $GITHUB_STEP_SUMMARY
          echo "Check the full logs for detailed metrics" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Performance test failed" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: results.json
